{"version":3,"sources":["components/Button.jsx","components/cards/СompetitionCard.jsx","containers/Сompetitions.jsx","helpers/index.js","components/cards/ParticipantCard.jsx","store/competitionsSlice.js","containers/Participants.jsx","containers/Сompetition.jsx","components/Input.jsx","containers/forms/CompetitionForm.jsx","containers/forms/UserProfileForm.jsx","containers/forms/UserResultForm.jsx","containers/ParticipantRegistration.jsx","containers/Sidebar.jsx","App.jsx","store/index.js","reportWebVitals.js","index.js"],"names":["Button","props","className","style","type","name","disabled","onClick","text","СompetitionCard","competition","id","status","winner","firstname","lastname","participants","length","to","margin","width","Сompetitions","competitions","useSelector","state","map","i","timeFromSeconds","timeInSeconds","seconds","minutes","ParticipantCard","participant","time","competitionsSlice","createSlice","initialState","reducers","addCompetition","reducer","action","push","payload","deleteCompetition","filter","item","setWinner","find","competitionId","finishCompetition","addParticipant","participantData","deleteParticipant","participantId","actions","Participants","dispatch","useDispatch","Сompetition","params","useParams","competiton","Input","placeholder","required","value","onChange","CompetitionForm","useState","setName","isSubmitted","setIsSubmitted","onSubmit","e","preventDefault","nanoid","htmlFor","target","UserRegistrationForm","setParticipantData","setIsRegistered","setFirstname","setLastname","ResultRegistrationForm","handleRegister","setTime","ParticipantRegistration","isRegistered","RootNavigation","CompetitionNavigation","sort","a","b","Navigation","match","useRouteMatch","path","strict","Sidebar","App","exact","configureStore","competitionsReducer","preloadedState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"gOAAe,SAASA,EAAOC,GAE3B,OACI,wBACIC,UAAWD,EAAMC,UAAYD,EAAMC,UAAY,MAC/CC,MAAOF,EAAME,MACbC,KAAMH,EAAMG,KACZC,KAAMJ,EAAMI,KACZC,SAAUL,EAAMK,SAChBC,QAASN,EAAMM,QANnB,SAOI,sBAAML,UAAU,YAAhB,SAA6BD,EAAMO,S,WCPhC,SAASC,EAAgBR,GAAQ,IAAD,EAE3C,OACI,qBAAKC,UAAU,OAAf,SACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,cAAf,UACI,mBAAGA,UAAU,aAAb,SAA2BD,EAAMS,YAAYL,OAC7C,oBAAGH,UAAU,gBAAb,iBAAkCD,EAAMS,YAAYC,MACpD,oBAAGT,UAAU,YAAb,qBAAkCD,EAAMS,YAAYE,aAExD,sBAAKV,UAAU,YAAf,WACK,UAAAD,EAAMS,YAAYG,cAAlB,eAA0BF,IAAK,yCAAYV,EAAMS,YAAYG,OAAOC,UAArC,IAAiDb,EAAMS,YAAYG,OAAOE,YAAgB,KAC1H,+CAAkBd,EAAMS,YAAYM,aAAaC,UACjD,cAAC,IAAD,CAAMC,GAAE,sBAAiBjB,EAAMS,YAAYC,IAA3C,SAAiD,cAACX,EAAD,CAAQQ,KAAK,OAAOL,MAAO,CAACgB,OAAQ,EAAGC,MAAO,oBCDpGC,MAZf,WACI,IAAMC,EAAeC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,gBAEhD,OACE,qBAAKpB,UAAU,yBAAf,SACGoB,EAAaG,KAAI,SAACf,EAAagB,GAC5B,OAAO,cAACjB,EAAD,CAAyBC,YAAaA,GAAhBgB,SCT5BC,EAAkB,SAACC,GAC5B,IAAIC,EAAWD,EAAgB,GAC3BE,GAAWF,EAAgBC,GAAW,GAK1C,OAFoBC,EAAU,GAAK,IAAMA,EAAUA,GAE5B,KAHHD,EAAU,GAAK,IAAMA,EAAUA,ICDxC,SAASE,EAAgB9B,GAEpC,OACI,qBAAKC,UAAWD,EAAM+B,YAAYrB,KAAOV,EAAMY,OAAOF,GAAK,cAAgB,OAA3E,SACI,sBAAKT,UAAU,eAAf,UACI,sBAAKA,UAAU,cAAf,UACI,oBAAGA,UAAU,aAAb,UAA2BD,EAAM+B,YAAYlB,UAA7C,IAAyDb,EAAM+B,YAAYjB,YAC3E,oBAAGb,UAAU,gBAAb,iBAAkCD,EAAM+B,YAAYrB,SAExD,sBAAKT,UAAU,YAAf,UACI,uCAAUyB,EAAgB1B,EAAM+B,YAAYC,SAC1B,WAAjBhC,EAAMW,OAAsB,cAACZ,EAAD,CAAQO,QAASN,EAAMM,QAASC,KAAK,SAASL,MAAO,CAACgB,OAAQ,EAAGC,MAAO,UAAa,KACjHnB,EAAM+B,YAAYrB,KAAOV,EAAMY,OAAOF,GAAK,wCAAiB,a,YCb3EuB,EAAoBC,YAAY,CAClC9B,KAAM,eACN+B,aAAc,GACdC,SAAU,CACNC,eAAgB,CACZC,QAAS,SAACf,EAAOgB,GACbhB,EAAMiB,KAAK,CACPpC,KAAMmC,EAAOE,QAAQrC,KACrBM,GAAI6B,EAAOE,QAAQ/B,GACnBC,OAAQ,SACRC,OAAQ,GACRG,aAAc,OAI1B2B,kBAAmB,CACfJ,QAAS,SAACf,EAAOgB,GACbhB,EAAMoB,QAAO,SAAAC,GAAI,OAAIA,EAAKlC,KAAO6B,EAAOE,QAAQ/B,QAGxDmC,UAAW,CACPP,QAAS,SAACf,EAAOgB,GACKhB,EAAMuB,MAAK,SAAArC,GAAW,OAAIA,EAAYC,KAAO6B,EAAOE,QAAQM,iBAClEnC,OAAS2B,EAAOE,QAAQ7B,SAG5CoC,kBAAmB,CACfV,QAAS,SAACf,EAAOgB,GACKhB,EAAMuB,MAAK,SAAArC,GAAW,OAAIA,EAAYC,KAAO6B,EAAOE,QAAQM,iBAClEpC,OAAS,aAG7BsC,eAAgB,CACZX,QAAS,SAACf,EAAOgB,GACKhB,EAAMuB,MAAK,SAAArC,GAAW,OAAIA,EAAYC,KAAO6B,EAAOE,QAAQM,iBAClEhC,aAAayB,KAAKD,EAAOE,QAAQS,mBAGrDC,kBAAmB,CACfb,QAAS,SAACf,EAAOgB,GACb,IAAI9B,EAAcc,EAAMuB,MAAK,SAAArC,GAAW,OAAIA,EAAYC,KAAO6B,EAAOE,QAAQM,iBAC9EtC,EAAYM,aAAeN,EAAYM,aAAa4B,QAAO,SAAAC,GAAI,OAAIA,EAAKlC,KAAO6B,EAAOE,QAAQW,sBAMvG,EAOHnB,EAAkBoB,QANlBhB,EADG,EACHA,eAEAY,GAHG,EAEHP,kBAFG,EAGHO,gBACAE,EAJG,EAIHA,kBACAN,EALG,EAKHA,UACAG,EANG,EAMHA,kBAEWf,IAAf,QCpCeqB,MAjBf,YAAsE,IAA/CvC,EAA8C,EAA9CA,aAAcgC,EAAgC,EAAhCA,cAAepC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAClD2C,EAAWC,cAEjB,OACI,qBAAKvD,UAAU,yBAAf,SACKc,EAAaS,KAAI,SAACO,EAAaN,GAC5B,OAAQ,cAACK,EAAD,CAEJC,YAAaA,EACbpB,OAAQA,EACRC,OAAQA,EACRN,QAAS,kBAAMiD,EAASJ,EAAkB,CAACC,cAAerB,EAAYrB,GAAIqC,qBAJrEtB,SCUVgC,MAjBf,WACI,IAAMC,EAASC,cACTC,EAAatC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,aAAayB,MAAK,SAAAF,GAAI,OAAIA,EAAKlC,KAAOgD,EAAOhD,SAE3F,OACI,sBAAKT,UAAU,cAAf,UACI,6BAAK2D,EAAWxD,OAChB,8CACA,cAAC,EAAD,CACIO,OAAQiD,EAAWjD,OACnBC,OAAQgD,EAAWhD,OACnBG,aAAc6C,EAAW7C,aACzBgC,cAAeW,EAAOhD,S,gBChBvB,SAASmD,EAAM7D,GAE1B,OACI,uBACIC,UAAU,QACVC,MAAOF,EAAME,MACbQ,GAAIV,EAAMU,GACVP,KAAMH,EAAMG,KACZC,KAAMJ,EAAMI,KACZC,SAAUL,EAAMK,SAChByD,YAAa9D,EAAM8D,YACnBC,SAAU/D,EAAM+D,SAChBC,MAAOhE,EAAMgE,MACbC,SAAUjE,EAAMiE,WC+BbC,MArCf,WACI,IAAMX,EAAWC,cACjB,EAAwBW,mBAAS,IAAjC,mBAAO/D,EAAP,KAAagE,EAAb,KACA,EAAsCD,oBAAS,GAA/C,mBAAOE,EAAP,KAAoBC,EAApB,KAgBA,OACI,sBAAMrE,UAAU,mBAAmBsE,SAflB,SAACC,GAClBA,EAAEC,iBAEiB,GAAfrE,EAAKY,SAETuC,EAASlB,EAAe,CAACjC,OAAMM,GAAIgE,YAAO,OAC1CJ,GAAe,KASf,SACKD,EACK,qCAAE,gDAAuB,cAACtE,EAAD,CAAQQ,KAAK,MAAMD,QARtC,WAChB8D,EAAQ,IACRE,GAAe,SAOL,qCAAE,gDACA,uBAAOK,QAAQ,eAAe1E,UAAU,aAAxC,0BACA,cAAC4D,EAAD,CACI1D,KAAK,OACLO,GAAG,eACHsD,MAAO5D,EACP6D,SAAU,SAACO,GAAD,OAAOJ,EAAQI,EAAEI,OAAOZ,UACtC,cAACjE,EAAD,CACII,KAAK,SACLI,KAAK,iBClCd,SAASsE,EAAT,GAAsE,IAAvCC,EAAsC,EAAtCA,mBAAoBC,EAAkB,EAAlBA,gBAC9D,EAAkCZ,mBAAS,IAA3C,mBAAOtD,EAAP,KAAkBmE,EAAlB,KACA,EAAgCb,mBAAS,IAAzC,mBAAOrD,EAAP,KAAiBmE,EAAjB,KAWA,OACI,uBAAMhF,UAAU,oBAAoBsE,SAVjB,SAACC,GACpBA,EAAEC,iBAEsB,GAApB5D,EAAUG,QAAkC,GAAnBF,EAASE,SAEtC8D,EAAmB,CAACjE,YAAWC,WAAUJ,GAAIgE,YAAO,MACpDK,GAAgB,KAIhB,UACI,0DACA,uBAAOJ,QAAQ,YAAY1E,UAAU,aAArC,yBACA,cAAC4D,EAAD,CACI1D,KAAK,OACLO,GAAG,YACHsD,MAAOnD,EACPoD,SAAU,SAACO,GAAD,OAAOQ,EAAaR,EAAEI,OAAOZ,UAC3C,uBAAOW,QAAQ,WAAW1E,UAAU,aAApC,wBACA,cAAC4D,EAAD,CACI1D,KAAK,OACLO,GAAG,WACHsD,MAAOlD,EACPmD,SAAU,SAACO,GAAD,OAAOS,EAAYT,EAAEI,OAAOZ,UAC1C,cAACjE,EAAD,CACII,KAAK,SACLI,KAAK,gBC/BN,SAAS2E,EAAT,GAAyG,IAAxEJ,EAAuE,EAAvEA,mBAAoBC,EAAmD,EAAnDA,gBAAiB7B,EAAkC,EAAlCA,gBAAiBiC,EAAiB,EAAjBA,eAClG,EAAwBhB,mBAAS,GAAjC,mBAAOnC,EAAP,KAAaoD,EAAb,KAOA,OACI,uBAAMnF,UAAU,oBAAoBsE,SAAU,SAACC,GAAD,OAAOW,EAAeX,EAAGxC,IAAvE,UACI,6CACA,oBAAG/B,UAAU,YAAb,UAA0BiD,EAAgBrC,UAA1C,IAAsDqC,EAAgBpC,YACtE,oBAAGb,UAAU,YAAb,iBAA8BiD,EAAgBxC,MAC9C,uBAAOiE,QAAQ,OAAO1E,UAAU,aAAhC,+BACA,cAAC4D,EAAD,CACI1D,KAAK,OACLO,GAAG,OACHsD,MAAOhC,EACP8B,YAAY,wBACZG,SAAU,SAACO,GAAD,OAAOY,EAAQZ,EAAEI,OAAOZ,UACtC,sBAAK/D,UAAU,iBAAf,UACI,cAACF,EAAD,CAAQG,MAAO,CAACiB,MAAO,QAAShB,KAAK,SAASI,KAAK,SACnD,cAACR,EAAD,CAAQG,MAAO,CAACiB,MAAO,QAASb,QAnBvB,WACjBwE,EAAmB,IACnBC,GAAgB,IAiB+CxE,KAAK,iBCI7D8E,MAvBf,WACI,IAAM3B,EAASC,cACTJ,EAAWC,cACjB,EAAwCW,oBAAS,GAAjD,mBAAOmB,EAAP,KAAqBP,EAArB,KACA,EAA8CZ,mBAAS,IAAvD,mBAAOjB,EAAP,KAAwB4B,EAAxB,KASA,OACI,qBAAK7E,UAAU,yBAAf,SACMqF,EAEI,cAAC,EAAD,CAAgBP,gBAAiBA,EAAiBD,mBAAoBA,EAAoB5B,gBAAiBA,EAAiBiC,eAXnH,SAACX,EAAGxC,GACvBwC,EAAEC,iBACFvB,EAAgBlB,KAAOA,EACvBuB,EAASN,EAAe,CAACC,kBAAiBH,cAAeW,EAAOhD,MAChEqE,GAAgB,MAMR,cAAC,EAAD,CAAiBA,gBAAiBA,EAAiBD,mBAAoBA,O,QClBvF,SAASS,IACL,OACI,qCACI,oBAAItF,UAAU,aAAd,SACI,cAAC,IAAD,CAAMA,UAAU,eAAegB,GAAE,IAAjC,4BAEJ,oBAAIhB,UAAU,aAAd,SACI,cAAC,IAAD,CAAMA,UAAU,eAAegB,GAAE,OAAjC,iCAMhB,SAASuE,EAAT,GAAsC,IAAN9E,EAAK,EAALA,GACtB6C,EAAWC,cACXI,EAAatC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,aAAayB,MAAK,SAAAF,GAAI,OAAIA,EAAKlC,KAAOA,QAQpF,OACI,qCACI,oBAAIT,UAAU,aAAd,SACI,cAAC,IAAD,CAAMA,UAAU,eAAegB,GAAE,IAAjC,sBAEJ,oBAAIhB,UAAU,aAAd,SACI,cAAC,IAAD,CAAMA,UAAU,eAAegB,GAAE,uBAAkBP,GAAnD,4BAEJ,oBAAIT,UAAU,aAAd,SACI,cAAC,IAAD,CAAMA,UAAU,eAAegB,GAAE,uBAAkBP,EAAlB,QAAjC,+BAEJ,oBAAIT,UAAU,aAAd,SACI,cAACF,EAAD,CAAQE,UAAU,eAAeM,KAAK,cAAcD,QAlB3C,WACjB,IAAIM,EAAS,YAAIgD,EAAW7C,cAAc0E,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAE3D,KAAO0D,EAAE1D,QAAM,GAC1EuB,EAASV,EAAU,CAACE,cAAerC,EAAIE,YACvC2C,EAASP,EAAkB,CAACD,cAAerC,aAqBnD,SAASkF,IAAc,IAAD,EACdC,EAAQC,YAAc,CACtBC,KAAM,mBACNC,QAAQ,IAGZ,OACI,oBAAI/F,UAAU,aAAd,SACK4F,EAAQ,cAACL,EAAD,CAAuB9E,GAAE,OAAEmF,QAAF,IAAEA,GAAF,UAAEA,EAAOnC,cAAT,aAAE,EAAehD,KAAQ,cAAC6E,EAAD,MAcxDU,MATf,WAEI,OACI,uBAAOhG,UAAU,UAAjB,SACI,cAAC2F,EAAD,O,MC9BGM,MAzBf,WAEE,OACE,qCACE,cAAC,EAAD,IACA,qBAAKjG,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOkG,OAAK,EAACJ,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,OAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOI,OAAK,EAACJ,KAAK,mBAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,uBAAZ,SACE,cAAC,EAAD,eCrBGK,cAAe,CAC1B9D,QAAS,CACLjB,aAAcgF,GAElBC,eAAgB,CACZjF,aAAc,CAAC,CACXjB,KAAM,iBACNM,GAAI,aACJC,OAAQ,SACRC,OAAQ,GACRG,aAAc,CAAC,CACXF,UAAW,WACXC,SAAU,QACVJ,GAAI,aACJsB,KAAM,OACP,CACCnB,UAAW,UACXC,SAAU,SACVJ,GAAI,aACJsB,KAAM,OACP,CACCnB,UAAW,SACXC,SAAU,SACVJ,GAAI,aACJsB,KAAM,MACP,CACCnB,UAAW,UACXC,SAAU,SACVJ,GAAI,aACJsB,KAAM,YCrBPuE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wBCKdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINC,SAASC,eAAe,SAM1Bd,M","file":"static/js/main.27fa54c6.chunk.js","sourcesContent":["export default function Button(props) {\r\n\r\n    return (\r\n        <button\r\n            className={props.className ? props.className : \"btn\"}\r\n            style={props.style}\r\n            type={props.type}\r\n            name={props.name}\r\n            disabled={props.disabled}\r\n            onClick={props.onClick}>\r\n            <span className=\"btn-label\">{props.text}</span>            \r\n        </button>\r\n    )\r\n}","import Button from '../Button';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function СompetitionCard(props) {\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-content\">\r\n                <div className=\"card-header\">\r\n                    <p className=\"card-title\">{props.competition.name}</p>\r\n                    <p className=\"card-subtitle\">id: {props.competition.id}</p>\r\n                    <p className=\"card-info\">Status: {props.competition.status}</p>\r\n                </div>\r\n                <div className=\"card-text\">\r\n                    {props.competition.winner?.id ? <p>Winner: {props.competition.winner.firstname} {props.competition.winner.lastname}</p> : null}\r\n                    <p>Participants: {props.competition.participants.length}</p>\r\n                    <Link to={`competition/${props.competition.id}`}><Button text=\"show\" style={{margin: 0, width: \"100%\"}}/></Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { useSelector } from 'react-redux';\r\nimport СompetitionCard from '../components/cards/СompetitionCard';\r\n\r\nfunction Сompetitions() {\r\n    const competitions = useSelector(state => state.competitions); \r\n\r\n    return (\r\n      <div className=\"competitions-container\">\r\n        {competitions.map((competition, i) => {\r\n            return <СompetitionCard key={i} competition={competition}/>\r\n        })}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Сompetitions;\r\n","export const timeFromSeconds = (timeInSeconds) => {\r\n    let seconds = (timeInSeconds % 60);\r\n    let minutes = (timeInSeconds - seconds) / 60;\r\n\r\n    let parsedSeconds = seconds < 10 ? '0' + seconds : seconds;\r\n    let parsedMinutes = minutes < 10 ? '0' + minutes : minutes;\r\n\r\n    return parsedMinutes + ':' + parsedSeconds;\r\n}","import {timeFromSeconds} from '../../helpers';\r\nimport Button from '../Button';\r\n\r\nexport default function ParticipantCard(props) {\r\n\r\n    return (\r\n        <div className={props.participant.id === props.winner.id ? \"card winner\" : \"card\"}>\r\n            <div className=\"card-content\">\r\n                <div className=\"card-header\">\r\n                    <p className=\"card-title\">{props.participant.firstname} {props.participant.lastname}</p>\r\n                    <p className=\"card-subtitle\">id: {props.participant.id}</p>\r\n                </div>\r\n                <div className=\"card-text\">\r\n                    <p>Time: {timeFromSeconds(props.participant.time)}</p>\r\n                    {props.status === \"active\" ? <Button onClick={props.onClick} text=\"delete\" style={{margin: 0, width: \"100%\"}}/> : null}\r\n                    {props.participant.id === props.winner.id ? <p>Winner!</p> : null}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst competitionsSlice = createSlice({\r\n    name: 'competitions',\r\n    initialState: [],\r\n    reducers: {\r\n        addCompetition: {\r\n            reducer: (state, action) => {\r\n                state.push({\r\n                    name: action.payload.name,\r\n                    id: action.payload.id,\r\n                    status: \"active\",\r\n                    winner: {},\r\n                    participants: []\r\n                })\r\n            },\r\n        },\r\n        deleteCompetition: {\r\n            reducer: (state, action) => {\r\n                state.filter(item => item.id !== action.payload.id)\r\n            },\r\n        },\r\n        setWinner: {\r\n            reducer: (state, action) => {\r\n                let competition = state.find(competition => competition.id === action.payload.competitionId);\r\n                competition.winner = action.payload.winner;\r\n            },\r\n        },\r\n        finishCompetition: {\r\n            reducer: (state, action) => {\r\n                let competition = state.find(competition => competition.id === action.payload.competitionId);\r\n                competition.status = \"finished\";\r\n            },\r\n        },\r\n        addParticipant: {\r\n            reducer: (state, action) => {\r\n                let competition = state.find(competition => competition.id === action.payload.competitionId);\r\n                competition.participants.push(action.payload.participantData);\r\n            },\r\n        },\r\n        deleteParticipant: {\r\n            reducer: (state, action) => {\r\n                let competition = state.find(competition => competition.id === action.payload.competitionId);\r\n                competition.participants = competition.participants.filter(item => item.id !== action.payload.participantId)\r\n            },\r\n        },\r\n    }\r\n})\r\n\r\nexport const {\r\n    addCompetition,\r\n    deleteCompetition,\r\n    addParticipant,\r\n    deleteParticipant,\r\n    setWinner,\r\n    finishCompetition\r\n} = competitionsSlice.actions;\r\nexport default competitionsSlice.reducer;","import ParticipantCard from '../components/cards/ParticipantCard';\r\nimport {useDispatch} from 'react-redux';\r\nimport {deleteParticipant} from '../store/competitionsSlice';\r\n\r\nfunction Participants({participants, competitionId, status, winner}) {\r\n    const dispatch = useDispatch();    \r\n\r\n    return (\r\n        <div className=\"participants-container\">\r\n            {participants.map((participant, i) => {\r\n                return (<ParticipantCard\r\n                    key={i}\r\n                    participant={participant}\r\n                    status={status}\r\n                    winner={winner}\r\n                    onClick={() => dispatch(deleteParticipant({participantId: participant.id, competitionId}))}/>)\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Participants;\r\n","import {useSelector} from 'react-redux';\r\nimport {useParams} from 'react-router-dom';\r\nimport Participants from './Participants';\r\n\r\nfunction Сompetition() {\r\n    const params = useParams();\r\n    const competiton = useSelector(state => state.competitions.find(item => item.id === params.id));\r\n\r\n    return (\r\n        <div className=\"competition\">\r\n            <h2>{competiton.name}</h2>\r\n            <h3>Participants</h3>\r\n            <Participants\r\n                status={competiton.status}\r\n                winner={competiton.winner}\r\n                participants={competiton.participants} \r\n                competitionId={params.id}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Сompetition;","export default function Input(props) {\r\n\r\n    return (\r\n        <input\r\n            className=\"input\"\r\n            style={props.style}\r\n            id={props.id}\r\n            type={props.type}\r\n            name={props.name}\r\n            disabled={props.disabled}\r\n            placeholder={props.placeholder}\r\n            required={props.required}\r\n            value={props.value}\r\n            onChange={props.onChange}/>\r\n    )\r\n}","import {useState} from 'react';\r\nimport {nanoid} from 'nanoid';\r\nimport Button from '../../components/Button';\r\nimport Input from '../../components/Input';\r\nimport {useDispatch} from 'react-redux';\r\nimport {addCompetition} from '../../store/competitionsSlice';\r\n\r\nfunction CompetitionForm() {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n    const handleCreate = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (name.length == 0) return;\r\n        \r\n        dispatch(addCompetition({name, id: nanoid(10)}));\r\n        setIsSubmitted(true);\r\n    }\r\n\r\n    const handleReset = () => {\r\n        setName(\"\");\r\n        setIsSubmitted(false);\r\n    }\r\n\r\n    return (\r\n        <form className=\"competition-form\" onSubmit={handleCreate}>\r\n            {isSubmitted\r\n                ? <><h2>Contest added!</h2><Button text=\"New\" onClick={handleReset}/></> \r\n                : <><h2>Create contest</h2>\r\n                    <label htmlFor=\"contest-name\" className=\"form-label\">Contest name</label>\r\n                    <Input\r\n                        type=\"text\"\r\n                        id=\"contest-name\"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}/>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        text=\"Create\"/></>}\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CompetitionForm;","import React, {useState} from 'react';\r\nimport {nanoid} from 'nanoid';\r\nimport Button from '../../components/Button';\r\nimport Input from '../../components/Input';\r\n\r\nexport default function UserRegistrationForm({setParticipantData, setIsRegistered}) {\r\n    const [firstname, setFirstname] = useState('');\r\n    const [lastname, setLastname] = useState('');\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (firstname.length == 0 || lastname.length == 0) return;\r\n\r\n        setParticipantData({firstname, lastname, id: nanoid(10)});\r\n        setIsRegistered(true);\r\n    }\r\n\r\n    return (\r\n        <form className=\"registration-form\" onSubmit={handleRegister}>\r\n            <h3>Participant Registration</h3>\r\n            <label htmlFor=\"firstname\" className=\"form-label\">First name:</label>\r\n            <Input\r\n                type=\"text\"\r\n                id=\"firstname\"\r\n                value={firstname}             \r\n                onChange={(e) => setFirstname(e.target.value)}/>\r\n            <label htmlFor=\"lastname\" className=\"form-label\">Last name:</label>\r\n            <Input\r\n                type=\"text\"\r\n                id=\"lastname\"\r\n                value={lastname}\r\n                onChange={(e) => setLastname(e.target.value)}/>\r\n            <Button \r\n                type=\"submit\"\r\n                text=\"Register\"/>\r\n        </form>\r\n    )\r\n}","import {useState} from 'react';\r\nimport Button from '../../components/Button';\r\nimport Input from '../../components/Input';\r\n\r\nexport default function ResultRegistrationForm({setParticipantData, setIsRegistered, participantData, handleRegister}) {\r\n    const [time, setTime] = useState(0);\r\n\r\n    const handleCancel = () => {\r\n        setParticipantData({})\r\n        setIsRegistered(false)\r\n    }\r\n\r\n    return (\r\n        <form className=\"registration-form\" onSubmit={(e) => handleRegister(e, time)}>\r\n            <h3>Participant</h3>\r\n            <p className=\"user-name\">{participantData.firstname} {participantData.lastname}</p>\r\n            <p className=\"user-info\">id: {participantData.id}</p>\r\n            <label htmlFor=\"time\" className=\"form-label\">Result (seconds):</label>\r\n            <Input\r\n                type=\"text\"\r\n                id=\"time\"\r\n                value={time}\r\n                placeholder=\"Enter time in seconds\"\r\n                onChange={(e) => setTime(e.target.value)}/>\r\n            <div className=\"flex-container\">\r\n                <Button style={{width: \"100%\"}} type=\"submit\" text=\"Save\"/>\r\n                <Button style={{width: \"100%\"}} onClick={handleCancel} text=\"Cancel\"/>\r\n            </div>\r\n        </form>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addParticipant } from '../store/competitionsSlice';\r\nimport UserProfileForm from './forms/UserProfileForm';\r\nimport UserResultForm from './forms/UserResultForm';\r\n\r\nfunction ParticipantRegistration() {\r\n    const params = useParams();\r\n    const dispatch = useDispatch();\r\n    const [isRegistered, setIsRegistered] = useState(false);\r\n    const [participantData, setParticipantData] = useState({});\r\n\r\n    const handleRegister = (e, time) => {\r\n        e.preventDefault();\r\n        participantData.time = time;\r\n        dispatch(addParticipant({participantData, competitionId: params.id}));\r\n        setIsRegistered(false);\r\n    }\r\n\r\n    return (\r\n        <div className=\"registration-container\">\r\n            {!isRegistered ? \r\n                <UserProfileForm setIsRegistered={setIsRegistered} setParticipantData={setParticipantData} />\r\n                : <UserResultForm setIsRegistered={setIsRegistered} setParticipantData={setParticipantData} participantData={participantData} handleRegister={handleRegister}/>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ParticipantRegistration;\r\n","import {Link, useRouteMatch} from 'react-router-dom';\r\nimport Button from '../components/Button';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { setWinner, finishCompetition } from '../store/competitionsSlice';\r\n\r\nfunction RootNavigation() {\r\n    return (\r\n        <>\r\n            <li className=\"sidebar-li\">\r\n                <Link className=\"sidebar-link\" to={`/`}>Competitions</Link>\r\n            </li>\r\n            <li className=\"sidebar-li\">\r\n                <Link className=\"sidebar-link\" to={`/new`}>Add competiton</Link>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction CompetitionNavigation({id}) {\r\n    const dispatch = useDispatch();\r\n    const competiton = useSelector(state => state.competitions.find(item => item.id === id));\r\n    \r\n    const handleWinner = () => {\r\n        let winner = [...competiton.participants].sort((a, b) => b.time - a.time)[0];\r\n        dispatch(setWinner({competitionId: id, winner}));\r\n        dispatch(finishCompetition({competitionId: id}));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <li className=\"sidebar-li\">\r\n                <Link className=\"sidebar-link\" to={`/`}>&lt; Back</Link>\r\n            </li>\r\n            <li className=\"sidebar-li\">\r\n                <Link className=\"sidebar-link\" to={`/competition/${id}`}>Participants</Link>\r\n            </li>\r\n            <li className=\"sidebar-li\">\r\n                <Link className=\"sidebar-link\" to={`/competition/${id}/new`}>Add participant</Link>\r\n            </li>\r\n            <li className=\"sidebar-li\">\r\n                <Button className=\"sidebar-link\" text=\"Show winner\" onClick={handleWinner}/>\r\n            </li>\r\n        </>\r\n    )\r\n}\r\n\r\nfunction Navigation() {\r\n    let match = useRouteMatch({\r\n        path: \"/competition/:id\",\r\n        strict: true,\r\n      });\r\n    \r\n    return (\r\n        <ul className=\"sidebar-ul\">\r\n            {match ? <CompetitionNavigation id={match?.params?.id}/> : <RootNavigation/>}\r\n        </ul>\r\n    )\r\n}\r\n\r\nfunction Sidebar() {\r\n\r\n    return (\r\n        <aside className=\"sidebar\">\r\n            <Navigation/>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default Sidebar;","import { Switch, Route } from 'react-router-dom';\r\nimport Competitions from './containers/Сompetitions';\r\nimport Competition from './containers/Сompetition';\r\nimport CompetitionForm from './containers/forms/CompetitionForm';\r\nimport ParticipantRegistration from './containers/ParticipantRegistration';\r\nimport Sidebar from './containers/Sidebar';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n      <Sidebar/>\r\n      <div className=\"App\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Competitions />\r\n          </Route>\r\n          <Route path=\"/new\">\r\n            <CompetitionForm />\r\n          </Route>\r\n          <Route exact path=\"/competition/:id\">\r\n            <Competition />\r\n          </Route>\r\n          <Route path=\"/competition/:id/new\">\r\n            <ParticipantRegistration />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport competitionsReducer from './competitionsSlice';\r\n\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        competitions: competitionsReducer,\r\n    },\r\n    preloadedState: {\r\n        competitions: [{\r\n            name: \"Eating burgers\",\r\n            id: \"MSpiWdrcx7\",\r\n            status: \"active\",\r\n            winner: {},\r\n            participants: [{\r\n                firstname: \"Robinson\",\r\n                lastname: \"Lloyd\",\r\n                id: \"NlzsCzmEbn\",\r\n                time: \"140\",\r\n            }, {\r\n                firstname: \"Eugenia\",\r\n                lastname: \"Barton\",\r\n                id: \"cVCiQeEWR0\",\r\n                time: \"121\",\r\n            }, {\r\n                firstname: \"Elnora\",\r\n                lastname: \"Coffey\",\r\n                id: \"GULjQqsmnp\",\r\n                time: \"84\",\r\n            }, {\r\n                firstname: \"Garrett\",\r\n                lastname: \"Bryant\",\r\n                id: \"2EziriaCxF\",\r\n                time: \"94\",\r\n            }]\r\n        }]\r\n    }\r\n});\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport './index.css';\r\nimport '@fontsource/montserrat/300.css';\r\nimport '@fontsource/montserrat/400.css';\r\nimport '@fontsource/montserrat/500.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <App />\r\n      </Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}